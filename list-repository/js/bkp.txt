(function () {
  const search = document.getElementById("search");
  const url = `https://api.github.com/orgs`;
  const uri = `/repos`;
  const client_id = "client_id=6e91aa9f24ed706ed387";
  const client_secret = "client_id=6082a0dc9c3c2dbce38fceed861dfa69745aafca";
  const count = "per_page=7";
  const sort = "created: asc";

  async function getUser(user) {
    const profileResponse = await fetch(
      `${url}/${user}?${client_id}&${client_secret}`
    );

    const reposResponse = await fetch(
      `${url}/${user}${uri}?${count}&${sort}&${client_id}&${client_secret}`
    );

    const profile = await profileResponse.json();
    const repos = await reposResponse.json();

    return { profile, repos };
  }

  function showProfile(user) {
    profile.innerHTML = `
      <div class="row mt-3">
        <div class="col-md-4">
          <div class="card" style="width: 18rem;">
            <img
              src="${user.avatar_url}"
              alt="Profile Image"
              class="card-img-top"
            />
            <ul class="list-group list-group-flush">
              <li class="list-group-item">
                Repositórios
                <span class="badge badge-success">${user.public_repos}</span>
              </li>
              <li class="list-group-item">
                Seguidores
                <span class="badge badge-primary">${user.followers}</span>
              </li>
              <li class="list-group-item">
                Seguindo
                <span class="badge badge-info">${user.following}</span>
              </li>
            </ul>
            <div class="card-bory">
              <a href="${user.html_url}" target="blank" class="btn btn-warning btn-block">
                Ver Perfil
              </a>
            </div>
          </div>
        </div>
        <div class="col-md-8">
          <div id="repos"></div>
        </div>
      </div>`;
  }
  function showRepos(repos) {
    let output = "";

    repos.forEach(repo => {
      output += `
      <div class="card card-body mb-2">
        <div class="row">
          <div class="col-md-6">
            <a href="${repo.html_url}" target="_blank">${repo.name}</a>
          </div>
          <div class="col-md-6">
            <span class="badge badge-primary">Stars: ${repo.stargazers_count}</span>
            <span class="badge badge-success">Watch: ${repo.watchers_count}</span>
            <span class="badge badge-warning">Forks: ${repo.forks_count}</span>
          </div>
          </div>
      </div>`;
    });
    document.getElementById("repos").innerHTML = output;
  }
  search.addEventListener("keyup", (e) => {
    const user = e.target.value;

    if (user.length > 0) {
      getUser(user).then((res) => {
        showProfile(res.profile);
        showRepos(res.repos);
      });
    }
  });
})();








// const getRepository = async (repos) => {
//   const reposResponse = await fetch(`${url}${repos}${uri}`)
//     .then((response) => {
//       if (!response.ok)
//         throw new Error("Erro ao executar requisição " + response.status);
//       return response.json();
//     })
//     .then((datas) => {
//       let output = "";
//       for (const data of datas) {
//         console.log(data, datas[data]);
//       }
//     })
//     .catch((error) => {
//       console.log(error.message);
//     });
// };
// search.addEventListener("keyup", (event) => {
//   const repos = event.target.value;

//   repos.length > 0
//     ? getRepository(repos).then((res) => console.log(res))
//     : null;

//   console.log(repos);
// });



========================

function getOrg(org) {
  const response = fetch(`${url}${org}${uri}`)
    .then((response) => response.json())

    .then((repos) => {
      showRepos(repos);
    })
    .catch((error) => {
      console.error(error);
    });
}

search.addEventListener("keyup", (e) => {
  const org = e.target.value;
  if (org.length > 0) {
    getOrg(org).then((res) => {
      showRepos(res.repos);
    });
  }
});

showRepos(repos)